version: 2.1
executors:
  android-machine:
    docker:
      - image: circleci/android:api-29-ndk
    working_directory: ~/code
    environment:
      GRADLE_OPTS: -Dorg.gradle.workers.max=1 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy="in-process"
jobs:
  prebuild:
    executor: android-machine
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run:
          name: Set Environment Variables
          command: |
            echo "fabric.key=$FABRIC_API_KEY" >> ./apikey.properties
            echo "android.backup.key=$ANDROID_BACKUP_KEY" >> ./apikey.properties
            cat ./apikey.properties
      - persist_to_workspace:
          root: .
          paths:
            - .
  buildDebug:
    executor: android-machine
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}
      - run:
          name: Run Build and Tests
          command: |
            echo $KEYSTORE_FILE | base64 -d > /tmp/keystore.jks
            echo $KEYSTORE_SETTING | base64 -d > ./keystore.properties
            echo "storeFile=/tmp/keystore.jks" >> ./keystore.properties
            echo $KEYSTORE_FILE
            echo $KEYSTORE_SETTING
            ./gradlew assembleDebug check
      - save_cache:
          paths:
            - ~/.gradle
            - ~/.android/build-cache
          key: jars-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: mobile/build/outputs/apk/debug
          destination: apk/mobile/debug
      - store_artifacts:
          path: tv/build/outputs/apk/debug
          destination: apk/tv/debug
      - store_artifacts:
          path: core/build/reports
          destination: reports/core
      - store_artifacts:
          path: mobile/build/reports
          destination: reports/mobile
      - store_artifacts:
          path: plugin/build/reports
          destination: reports/plugin
      - store_artifacts:
          path: tv/build/reports
          destination: reports/tv
  buildRelease:
    executor: android-machine
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: jars-release-{{ checksum "build.gradle" }}
      - run:
          name: Run Build
          command: |
            echo $KEYSTORE_FILE | base64 -d > /tmp/keystore.jks
            echo $KEYSTORE_SETTING | base64 -d > ./keystore.properties
            echo "storeFile=/tmp/keystore.jks" >> ./keystore.properties
            ./gradlew assembleRelease
      - save_cache:
          paths:
            - ~/.gradle
            - ~/.android/build-cache
          key: jars-release-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: mobile/build/outputs/apk/release
          destination: apk/mobile/release
      - store_artifacts:
          path: tv/build/outputs/apk/release
          destination: apk/tv/release
      - run:
          name: Copy artifacts
          command: |
            VERSION=`jq '.[0].apkData.versionName' mobile/build/outputs/apk/release/output.json | sed 's/\"//g'`
            ./release.sh $VERSION
            mkdir -p ./artifacts
            cp *.apk ./artifacts
      - persist_to_workspace:
          root: .
          paths:
            - artifacts
  publish:
    working_directory: ~/code
    docker:
      - image: circleci/golang:latest
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_ACCESS_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n ${CIRCLE_TAG} -delete ${CIRCLE_TAG} ./artifacts/

workflows:
  version: 2
  build:
    jobs:
      - prebuild:
          filters:
            tags:
              only: /^v.*/
      - buildDebug:
          requires:
            - prebuild
      - buildRelease:
          requires:
            - prebuild
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish:
          requires:
            - buildRelease
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
